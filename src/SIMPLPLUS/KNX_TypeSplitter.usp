/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:
System Name:KNX
System Number:
Programmer:
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
// #ENABLE_DYNAMIC
// #SYMBOL_NAME ""
// #HINT ""
// #DEFINE_CONSTANT
// #CATEGORY "" 
#CATEGORY "46" "KNX" // Custom
// #PRINT_TO_TRACE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND 
// #OUTPUT_SHIFT 
// #HELP_PDF_FILE ""
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
// #ENCODING_ASCII
// #ENCODING_UTF16
// #ENCODING_INHERIT_FROM_PARENT
// #ENCODING_INHERIT_FROM_PROGRAM
/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

STRING_INPUT	_SKIP_;			STRING_OUTPUT	KNX_1bit_TX$;
STRING_INPUT	_SKIP_;			STRING_OUTPUT	KNX_1Byte_TX$;
STRING_INPUT	_SKIP_;			STRING_OUTPUT	KNX_2Byte_TX$;
STRING_INPUT	FROM_RX$[64];		STRING_OUTPUT	TX$;

change FROM_RX$
{
	STRING from_rx[64];
	from_rx = FROM_RX$;

	if( len(from_rx)<10 )
		return;

	if( Find(":1:",from_rx) > 0 )	
	{
		KNX_1bit_TX$ = from_rx;
	}
	else if( Find(":2:",from_rx) > 0 )
	{
		KNX_1Byte_TX$ = from_rx;
	}
	else if( Find(":3:",from_rx) > 0 )
	{
		KNX_2Byte_TX$ = from_rx;
	}
	else
		TX$ = from_rx;
}

Function Main()
{
	WaitForInitializationComplete();
}

