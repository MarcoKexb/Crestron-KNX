/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:
System Name:KNX
System Number:
Programmer:
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
// #ENABLE_DYNAMIC
// #SYMBOL_NAME ""
// #HINT ""
// #DEFINE_CONSTANT
// #CATEGORY "" 
#CATEGORY "46" "KNX" // Custom
// #PRINT_TO_TRACE
//#DIGITAL_EXPAND OutputsWithParams
//#ANALOG_SERIAL_EXPAND OutputsWithParams
// #OUTPUT_SHIFT 
// #HELP_PDF_FILE ""
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
// #ENCODING_ASCII
// #ENCODING_UTF16
// #ENCODING_INHERIT_FROM_PARENT
// #ENCODING_INHERIT_FROM_PROGRAM
/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

STRING_INPUT	FROM_RX$[64];		STRING_OUTPUT FILTERED_RX$;
STRING_PARAMETER _SKIP_;			DIGITAL_OUTPUT _SKIP_;
STRING_PARAMETER Group[200,1][32];	DIGITAL_OUTPUT out_fb[200,1];

#BEGIN_PARAMETER_PROPERTIES Group
   propDefaultValue="";
#END_PARAMETER_PROPERTIES

INTEGER NumInputs;

change FROM_RX$
{
	integer i;
	string Slocal[64];

	Slocal = FROM_RX$;
	if( len(Slocal)<1 )
	return;

	for( i=1 to NumInputs step 1 )
	{	
		if( Group[i] <> "" )
		{
			if(Find(Group[i],Slocal) = 1)
			{
				out_fb[i] = 1;
				if( i%2 = 0 )
					out_fb[i-1] = 0;
				else if( i+1 <= NumInputs )
					out_fb[i+1] = 0;
				return;
			}
		}
	}
	FILTERED_RX$ = Slocal;
}

Function Main()
{
	WaitForInitializationComplete();

	for(NumInputs = 200 to 1 Step -1)
		if(IsSignalDefined(out_fb[NumInputs]))
			Break;
}

